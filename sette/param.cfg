# Computer/user dependant variable needed to run sette
#
# REFERENCE run.stat tracer.stat you want to compare with
# (if no change to the default, no check on result change will be done)
NEMO_VALIDATION_REF=/path/to/reference/sette/results
NEMO_REV_REF=0000
#
# ------------------------------------------------------------------------------------------
# IMPORTANT:
# variables (COMPILER, USING_XIOS, USING_MPMD, BATCH_CMD, BATCH_STAT, BATCH_NAME, FORCING_DIR, SVN_CMD, ADD_NOSIGNEDZERO)
# can be exported from your shell startup files. 
# If it is the case, nothing to do
# otherwise, you need to update the default initialisation
#
# ADVISE: setup the default value in your startup file if it doesn't fit your need for at least
# SETTE_COMPILER, SETTE_BATCH_CMD, SETTE_BATCH_STAT, SETTE_BATCH_NAME, SETTE_FORCING_DIR, 
#
# ------------------------------------------------------------------------------------------
# COMPILER setting
# Compiler among those in NEMOGCM/ARCH
COMPILER=${SETTE_COMPILER:-XXXXXXXX}
# ------------------------------------------------------------------------------------------
#
# BATCH command
# command to submit a job
BATCH_CMD=${SETTE_BATCH_CMD:-llsubmit}
# command to check job status
BATCH_STAT=${SETTE_BATCH_STAT:-llq}
# generic sette job name (as it appears with $BATCH_STAT command)
BATCH_NAME=${SETTE_BATCH_NAME:-sette}
# ------------------------------------------------------------------------------------------
#
# FILES STORING paths
# forcing files storing
FORCING_DIR=${SETTE_FORCING_DIR:-$WORKDIR/FORCING}
# validation files storing
NEMO_VALIDATION_DIR=${SETTE_NEMO_VALIDATION_DIR:-$MAIN_DIR}/NEMO_VALIDATION
# input files storing (namelist, iodef ...) (DO NOT CHANGE)
INPUT_DIR=${CONFIG_DIR}/${NEW_CONF}/EXP00
# ------------------------------------------------------------------------------------------
#
# RUN set up
# USING_XIOS        : flag to control the activation of key_iomput
#                      "yes" to compile using key_iomput and link to the external XIOS library
#                      "no"  to compile without key_iomput and link to the old IOIPSL library
USING_XIOS=${SETTE_XIOS:-"yes"}
# USING_MPMD        : flag to control the use of stand-alone IO servers
#                     requires USING_XIOS="yes"
#                      "yes" to run in MPMD (detached) mode with stand-alone IO servers
#                      "no"  to run in SPMD (attached) mode without separate IO servers 
# MPMD
USING_MPMD=${SETTE_MPMD:-"no"}
# generique batch scrip prefix name if MPMD set to true/false
JOB_PREFIX_MPMD=${SETTE_JOB_PREFIX_MPMD:-batch-mpmd}
JOB_PREFIX_NOMPMD=${SETTE_JOB_PREFIX_NOMPMD:-batch}
# ------------------------------------------------------------------------------------------
#
# MISCELENIOUS
# command for svn (some people use git svn) 
# used in sette_rpt and in all_function to display revision and build correct repository name
SVN_CMD=${SETTE_SVN_CMD:-svn}
# add key key_nosignedzero at the compilation step
ADD_NOSIGNEDZERO=${SETTE_ADD_NOSIGNEDZERO:-"yes"}
# only for IBM
#TMPDIR=${CONFIG_DIR}/${NEW_CONF}/EXP00
# cleaning CFG_ST
CLEAN_CONFIGS=${SETTE_CLEAN_CONFIGS:-"no"}
# synchronisation MY_SRC and EXP00 of CFG_ST with MY_SRC and EXPREF form CFG
SYNC_CONFIGS=${SETTE_SYNC_CONFIGS:-"no"}
# langage (only en_US supported). This is used to grep information form linux/svn command.
LC_MESSAGES=en_US
# ------------------------------------------------------------------------------------------
#
# LIST OF CONFIGURATIONS
# to be updated if you added an new configuration in sette_test-cases.sh or sette_reference-configuration.sh
TEST_CONFIGS=${SETTE_TEST_CONFIGS:-"ORCA2_ICE_PISCES ORCA2_OFF_PISCES AMM12 AGRIF SPITZ12 GYRE_PISCES SAS ORCA2_ICE_OBS ICE_AGRIF OVERFLOW LOCK_EXCHANGE VORTEX ISOMIP"}
# ------------------------------------------------------------------------------------------
#
# reporting  
# Set number of passes (default only 1). For a second pass, set '0 1'
RPT_PASSES=${SETTE_RPT_NPASSES:-'0'} 
